Supported Platforms:
	* Windows
	* Linux
	* Mac OS

How to Run:
You can find a build in the folder "Release"

requires .NET 5. You can download the runtime at https://dotnet.microsoft.com/download/dotnet/5.0
and run on the command line: dotnet BlackJack.NET.dll

Alternatively you can download visual studio https://visualstudio.microsoft.com/
and set it up with the .NET 5 SDK to compile and run the software.

Tests can be run either in Visual Studio or by dotnet test Tests.dll

Assumptions and Thoughts along the road:
I included the .git folder if you want to browse my git log to see what I said about various milestones.

Normally the Dealer would have one card up and the other down. Though the player hits until 16 or higher. 
The Dealer is the only one that needs to observe the other's hand. And by that point the player has stayed/bust already.

So I did not code in the concept of showing/hidden cards.


Also typically casinos have all players play first and the dealer is the final player. 
So the game logic will have the player finish their hand followed by the dealer.

I originally wanted to do an interface/abstract for Player and implement it as Dealer and Player. 
But I found that it was mostly only coming down to the difference in play strategy which was causing a lot of duplicate code.

Another challenge I had was that I didn't think out data access of the player's hand to the Game Controller very well.
So some of the last second changes had to do with making sure the game could tell if a player was bust or not.
Or also how to have the player stay. Decided to just do a callback to the game controller. I figured since there was no turn taking, a single flag would suffice.

